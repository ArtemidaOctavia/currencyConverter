{"version":3,"sources":["components/Header/Header.module.css","components/Converter/Converter.module.css","redux/converterReducer.js","redux/coursesReducer.js","API/API.js","components/Converter/ConverterContainer.jsx","components/Converter/Converter.jsx","components/Courses/CoursesContainer.jsx","components/Courses/Courses.jsx","components/Header/HeaderContainer.jsx","components/Header/Header.jsx","redux/headerReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","currency","converted","sum","courses","getCoursesThunk","city","dispatch","axios","getInfo","then","response","type","data","ConverterContainer","connect","state","converter","setCurrency","setConverted","value","setCourses","setSum","props","onChange","event","target","placeholder","Object","entries","map","item","index","substring","onClick","className","styles","button","key","toFixed","CoursesContainer","arr","HeaderContainer","navlink","to","reducers","combineReducers","header","action","store","createStore","applyMiddleware","ReduxThunk","window","App","path","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c57a2e09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"Header_navlink__vuoD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Converter_button__2Wzbu\"};","let initialState = {\r\n  currency: null,\r\n  converted: null,\r\n  sum: null\r\n\r\n};\r\n\r\nexport const converterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET-CURRENCY':\r\n      return {\r\n        ...state,\r\n        currency: action.currency\r\n      };\r\n    case 'SET-CONVERTED':\r\n      return {\r\n        ...state,\r\n        converted: action.value\r\n      };\r\n    case 'SET-SUM':\r\n      return {\r\n        ...state,\r\n        sum: action.sum\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n};\r\n\r\nexport const setCurrency = (currency) => ({type: 'SET-CURRENCY', currency});\r\nexport const setConverted = (value) => ({type: 'SET-CONVERTED', value});\r\nexport const setSum = (sum) => ({type: 'SET-SUM', sum});","import {getInfo} from \"../API/API\";\r\n\r\nlet initialState = {\r\n  courses: null\r\n};\r\n\r\nexport const coursesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET-COURSES':\r\n      return {\r\n        ...state,\r\n        courses: action.courses\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n};\r\n\r\nlet setCoursesActionCreator = (courses) => {\r\n  return {\r\n    type: `SET-COURSES`,\r\n    courses\r\n  }\r\n};\r\n\r\nexport const getCoursesThunk = (city) => {\r\n  return (dispatch) => {\r\n    getInfo(city).then((response) => {\r\n      dispatch(setCoursesActionCreator(response.data))\r\n    });\r\n  }\r\n};\r\n\r\n","import * as axios from \"axios/index\"\r\n\r\n// https://belarusbank.by/api/kursExchange?city=%D0%92%D0%B8%D1%82%D0%B5%D0%B1%D1%81%D0%BA\r\n\r\n\r\nexport const getInfo = (city) => {\r\n  return axios.get(`https://cors-anywhere.herokuapp.com/https://belarusbank.by/api/kursExchange?city=${city}`)\r\n};","import React from 'react';\r\nimport {Converter} from \"./Converter\";\r\nimport {connect} from 'react-redux';\r\nimport {setConverted, setCurrency, setSum} from \"../../redux/converterReducer\";\r\nimport {getCoursesThunk} from \"../../redux/coursesReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    courses: state.courses.courses,\r\n    currency: state.converter.currency,\r\n    converted: state.converter.converted,\r\n    sum: state.converter.sum\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrency: (currency) => dispatch(setCurrency(currency)),\r\n    setConverted: (converted) => dispatch(setConverted(converted)),\r\n    setCourses: (city) => dispatch(getCoursesThunk(city)),\r\n    setSum: (sum) => dispatch(setSum(sum))\r\n  }\r\n};\r\n\r\nconst ConverterContainer = connect(mapStateToProps, mapDispatchToProps)(Converter);\r\nexport default ConverterContainer;","import React from 'react';\r\nimport styles from './Converter.module.css'\r\n\r\nexport const Converter = (props) => {\r\n  return (\r\n    <div>\r\n\r\n      <div><input onChange={(event) => {props.setSum(event.target.value)}} placeholder={'BYR'}></input> <span>to {props.currency ? props.currency : '...'} </span><span>{\r\n\r\n        props.converted ? `= ${props.converted}` : ''\r\n\r\n      }</span></div>\r\n\r\n      {props.courses ?\r\n        Object.entries(props.courses[0]).map((item, index) => {\r\n          if (index <= 16) {\r\n            let currency = index % 2 === 0 ? item[0].substring(0, 3) : '';\r\n            if (index % 2 === 0) {\r\n              return <div onClick={() => {props.setCurrency(currency)}} className={styles.button} key={index}>{currency}</div>\r\n            }\r\n          }\r\n        }) : ''\r\n      }\r\n      <div>\r\n        <div>\r\n          <button onClick={ () => props.setConverted(\r\n            (props.sum / props.courses[0][`${props.currency}_out`]).toFixed(2)\r\n          )}>convert</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Courses} from \"./Courses\";\r\nimport {getCoursesThunk} from \"../../redux/coursesReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      courses: state.courses.courses\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCourses: (city) => dispatch(getCoursesThunk(city))\r\n  }\r\n};\r\n\r\nconst CoursesContainer = connect(mapStateToProps, mapDispatchToProps)(Courses);\r\nexport default CoursesContainer;","import React from 'react';\r\n\r\nexport const Courses = (props) => {\r\n  return (\r\n    <div>\r\n      {props.courses ?\r\n        <div>\r\n          {\r\n            Object.entries(props.courses[0]).map((item, index, arr) => {\r\n              if (index <= 16) {\r\n                let currency = index % 2 === 0 ? item[0].substring(0, 3) : '';\r\n                if (index % 2 === 0) {\r\n                  return <div key={index}><span>{currency + ': ' + item[1]}/{arr[index + 1][1]} </span></div>\r\n                }\r\n              }\r\n            })\r\n          }\r\n        </div>\r\n        : ''}\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Header} from \"./Header\";\r\nimport {getCoursesThunk} from \"../../redux/coursesReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCourses: (city) => dispatch(getCoursesThunk(city))\r\n  }\r\n};\r\n\r\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\r\nexport default HeaderContainer;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from './Header.module.css'\r\n\r\nexport const Header = (props) => {\r\n  props.setCourses('Минск');\r\n  return (\r\n      <nav>\r\n        <NavLink className={styles.navlink} to={`/converter`}>Converter</NavLink>\r\n        <NavLink className={styles.navlink} to={`/courses`}>Courses</NavLink>\r\n      </nav>\r\n  )\r\n};","let initialState = {\r\n\r\n};\r\n\r\nexport const headerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {headerReducer} from \"./headerReducer\";\r\nimport {coursesReducer} from \"./coursesReducer\";\r\nimport ReduxThunk from 'redux-thunk'\r\nimport {converterReducer} from \"./converterReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n  header: headerReducer,\r\n  courses: coursesReducer,\r\n  converter: converterReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(ReduxThunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport ConverterContainer from \"./components/Converter/ConverterContainer\";\nimport CoursesContainer from \"./components/Courses/CoursesContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <HeaderContainer />\n        <Route  path={'/converter'} render={() => <ConverterContainer />}/>\n        <Route  path={'/courses'} render={() => <CoursesContainer />}/>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}